name: test

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Install MongoDB
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades mongodb-org=4.2.6 mongodb-org-server=4.2.6 mongodb-org-shell=4.2.6 mongodb-org-mongos=4.2.6 mongodb-org-tools=4.2.6
      - name: Start MongoDB
        run: sudo systemctl start mongod
      - name: Verify MongoDB is started
        run: sudo systemctl status mongod
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --retry 3
      - name: Create text search index
        run: bin/rake db:mongoid:create_indexes
        env:
          RAILS_ENV: 'test'
      - name: Rubocop
        run: bin/rake cop
      - name: Tests
        run: bin/rake test
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Push to AWS CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name categories-api \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name categories-api-deployment-group \
          --description "Deployment from master at $(date)" \
          --github-location repository=gowda/categories-api,commitId=$(git rev-parse HEAD)
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
